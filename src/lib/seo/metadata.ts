import { Metadata } from 'next';
import { SupportedLanguage } from '@/contexts/LanguageContext';

interface SEOConfig {
  title: string;
  description: string;
  keywords: string[];
  ogTitle?: string;
  ogDescription?: string;
}

// 언어별 SEO 설정
const SEO_CONFIGS: Record<SupportedLanguage, SEOConfig> = {
  ko: {
    title: 'NAVI - AI 가이드 | 맞춤형 여행 가이드',
    description: 'AI가 실시간으로 생성하는 개인 맞춤형 여행 가이드. 전 세계 관광지의 상세한 오디오 가이드를 경험해보세요.',
    keywords: [
      'AI 가이드', '여행 가이드', '관광 안내', '오디오 가이드', '맞춤형 여행',
      '스마트 투어', '실시간 가이드', '여행 정보', '관광지 안내', '여행 앱'
    ],
    ogTitle: 'NAVI - AI가 만드는 맞춤형 여행 가이드',
    ogDescription: '세계 어디든 AI가 실시간으로 생성하는 개인 맞춤형 여행 가이드를 경험해보세요.'
  },
  en: {
    title: 'NAVI - AI Guide | Personalized Travel Guides',
    description: 'AI-powered personalized travel guides generated in real-time. Experience detailed audio guides for tourist destinations worldwide.',
    keywords: [
      'AI guide', 'travel guide', 'tourist guide', 'audio guide', 'personalized travel',
      'smart tour', 'real-time guide', 'travel information', 'tourism app', 'travel assistant'
    ],
    ogTitle: 'NAVI - AI-Powered Personalized Travel Guides',
    ogDescription: 'Discover personalized travel guides generated by AI in real-time, anywhere in the world.'
  },
  ja: {
    title: 'NAVI - AIガイド | パーソナライズされた旅行ガイド',
    description: 'AIがリアルタイムで生成する個人に合わせた旅行ガイド。世界中の観光地の詳細なオーディオガイドを体験してください。',
    keywords: [
      'AIガイド', '旅行ガイド', '観光案内', 'オーディオガイド', 'パーソナライズ旅行',
      'スマートツアー', 'リアルタイムガイド', '旅行情報', '観光地案内', '旅行アプリ'
    ],
    ogTitle: 'NAVI - AIが作るパーソナライズされた旅行ガイド',
    ogDescription: '世界のどこでもAIがリアルタイムで生成する個人に合わせた旅行ガイドを体験してください。'
  },
  zh: {
    title: 'NAVI - AI导游 | 个性化旅行指南',
    description: 'AI实时生成的个性化旅行指南。体验全球旅游景点的详细语音导览服务。',
    keywords: [
      'AI导游', '旅行指南', '旅游指南', '语音导览', '个性化旅行',
      '智能导览', '实时导游', '旅行信息', '景点介绍', '旅游应用'
    ],
    ogTitle: 'NAVI - AI生成的个性化旅行指南',
    ogDescription: '在世界任何地方都能体验AI实时生成的个性化旅行指南。'
  },
  es: {
    title: 'NAVI - Guía AI | Guías de Viaje Personalizadas',
    description: 'Guías de viaje personalizadas generadas por IA en tiempo real. Experimenta guías de audio detalladas para destinos turísticos de todo el mundo.',
    keywords: [
      'guía AI', 'guía de viaje', 'guía turística', 'guía de audio', 'viaje personalizado',
      'tour inteligente', 'guía en tiempo real', 'información de viaje', 'aplicación de turismo', 'asistente de viaje'
    ],
    ogTitle: 'NAVI - Guías de Viaje Personalizadas con IA',
    ogDescription: 'Descubre guías de viaje personalizadas generadas por IA en tiempo real, en cualquier lugar del mundo.'
  }
};

// 기본 도메인 설정
const BASE_DOMAINS: Record<SupportedLanguage, string> = {
  ko: 'https://navi-guide.com',
  en: 'https://en.navi-guide.com',
  ja: 'https://ja.navi-guide.com',
  zh: 'https://zh.navi-guide.com',
  es: 'https://es.navi-guide.com',
};

// 언어별 locale 매핑
const LOCALE_MAP: Record<SupportedLanguage, string> = {
  ko: 'ko_KR',
  en: 'en_US',
  ja: 'ja_JP',
  zh: 'zh_CN',
  es: 'es_ES',
};

/**
 * 기본 메타데이터 생성
 */
export function generateBaseMetadata(
  language: SupportedLanguage = 'ko',
  customTitle?: string,
  customDescription?: string
): Metadata {
  const config = SEO_CONFIGS[language];
  const domain = BASE_DOMAINS[language];
  const locale = LOCALE_MAP[language];
  
  const title = customTitle || config.title;
  const description = customDescription || config.description;
  
  return {
    title: {
      default: title,
      template: `%s | NAVI AI Guide`,
    },
    description,
    keywords: config.keywords,
    authors: [{ name: 'NAVI Team' }],
    creator: 'NAVI',
    publisher: 'NAVI',
    formatDetection: {
      email: false,
      address: false,
      telephone: false,
    },
    metadataBase: new URL(domain),
    alternates: {
      canonical: domain,
      languages: {
        'ko': BASE_DOMAINS.ko,
        'en': BASE_DOMAINS.en,
        'ja': BASE_DOMAINS.ja,
        'zh': BASE_DOMAINS.zh,
        'es': BASE_DOMAINS.es,
        'x-default': BASE_DOMAINS.ko,
      },
    },
    openGraph: {
      type: 'website',
      locale,
      alternateLocale: Object.values(LOCALE_MAP).filter(l => l !== locale),
      url: domain,
      title: config.ogTitle || title,
      description: config.ogDescription || description,
      siteName: 'NAVI',
      images: [
        {
          url: '/og-image.jpg',
          width: 1200,
          height: 630,
          alt: 'NAVI AI Guide',
        },
        {
          url: '/og-image-square.jpg',
          width: 600,
          height: 600,
          alt: 'NAVI AI Guide',
        },
      ],
    },
    twitter: {
      card: 'summary_large_image',
      title: config.ogTitle || title,
      description: config.ogDescription || description,
      images: ['/og-image.jpg'],
      creator: '@navi_guide',
      site: '@navi_guide',
    },
    robots: {
      index: true,
      follow: true,
      googleBot: {
        index: true,
        follow: true,
        'max-video-preview': -1,
        'max-image-preview': 'large',
        'max-snippet': -1,
      },
    },
    verification: {
      google: process.env.GOOGLE_VERIFICATION_ID,
      other: {
        'naver-site-verification': process.env.NAVER_VERIFICATION_ID || '',
        'facebook-domain-verification': process.env.FACEBOOK_VERIFICATION_ID || '',
      },
    },
  };
}

/**
 * 가이드 페이지 메타데이터 생성
 */
export function generateGuideMetadata(
  guideName: string,
  language: SupportedLanguage = 'ko',
  guideData?: {
    description?: string;
    duration?: string;
    difficulty?: string;
    imageUrl?: string;
  }
): Metadata {
  const config = SEO_CONFIGS[language];
  const domain = BASE_DOMAINS[language];
  const locale = LOCALE_MAP[language];
  
  // 언어별 제목 템플릿
  const titleTemplates: Record<SupportedLanguage, string> = {
    ko: `${guideName} 가이드 - AI 오디오 투어`,
    en: `${guideName} Guide - AI Audio Tour`,
    ja: `${guideName} ガイド - AIオーディオツアー`,
    zh: `${guideName} 导览 - AI语音导游`,
    es: `${guideName} Guía - Tour de Audio AI`,
  };
  
  // 언어별 설명 템플릿
  const descriptionTemplates: Record<SupportedLanguage, string> = {
    ko: `${guideName}의 상세한 AI 오디오 가이드입니다. ${guideData?.duration || '약 1-2시간'}의 몰입형 투어를 통해 ${guideName}의 숨겨진 이야기를 발견해보세요.`,
    en: `Detailed AI audio guide for ${guideName}. Discover hidden stories of ${guideName} through ${guideData?.duration || 'approximately 1-2 hours'} of immersive tour.`,
    ja: `${guideName}の詳細なAIオーディオガイドです。${guideData?.duration || '約1-2時間'}の没入型ツアーで${guideName}の隠された物語を発見してください。`,
    zh: `${guideName}的详细AI语音导览。通过${guideData?.duration || '约1-2小时'}的沉浸式导览发现${guideName}的隐藏故事。`,
    es: `Guía de audio AI detallada para ${guideName}. Descubre historias ocultas de ${guideName} a través de ${guideData?.duration || 'aproximadamente 1-2 horas'} de tour inmersivo.`,
  };
  
  const title = titleTemplates[language];
  const description = guideData?.description || descriptionTemplates[language];
  
  return {
    title,
    description,
    keywords: [
      ...config.keywords,
      guideName,
      ...(language === 'ko' ? [`${guideName} 가이드`, `${guideName} 투어`, `${guideName} 관광`] : []),
      ...(language === 'en' ? [`${guideName} guide`, `${guideName} tour`, `${guideName} tourism`] : []),
      ...(language === 'ja' ? [`${guideName} ガイド`, `${guideName} ツアー`, `${guideName} 観光`] : []),
      ...(language === 'zh' ? [`${guideName} 导览`, `${guideName} 旅游`, `${guideName} 景点`] : []),
      ...(language === 'es' ? [`${guideName} guía`, `${guideName} tour`, `${guideName} turismo`] : []),
    ],
    openGraph: {
      type: 'article',
      locale,
      alternateLocale: Object.values(LOCALE_MAP).filter(l => l !== locale),
      url: `${domain}/guides/${encodeURIComponent(guideName)}`,
      title,
      description,
      siteName: 'NAVI',
      images: [
        {
          url: guideData?.imageUrl || '/og-image-guide.jpg',
          width: 1200,
          height: 630,
          alt: `${guideName} Guide`,
        },
      ],
  
    },
    twitter: {
      card: 'summary_large_image',
      title,
      description,
      images: [guideData?.imageUrl || '/og-image-guide.jpg'],
    },
    other: {
      'guide:name': guideName,
      'guide:duration': guideData?.duration || '',
      'guide:difficulty': guideData?.difficulty || '',
      'guide:language': language,
    },
  };
}

/**
 * JSON-LD 구조화 데이터 생성
 */
export function generateJsonLd(
  type: 'WebSite' | 'Article' | 'TouristAttraction',
  data: any,
  language: SupportedLanguage = 'ko'
) {
  const domain = BASE_DOMAINS[language];
  const locale = LOCALE_MAP[language];
  
  const baseJsonLd = {
    '@context': 'https://schema.org',
    '@language': language,
  };
  
  switch (type) {
    case 'WebSite':
      return {
        ...baseJsonLd,
        '@type': 'WebSite',
        name: 'NAVI',
        alternateName: 'NAVI AI Guide',
        url: domain,
        description: SEO_CONFIGS[language].description,
        inLanguage: language,
        potentialAction: {
          '@type': 'SearchAction',
          target: `${domain}/search?q={search_term_string}`,
          'query-input': 'required name=search_term_string',
        },
        sameAs: [
          'https://twitter.com/navi_guide',
          'https://facebook.com/naviguide',
          'https://instagram.com/navi_guide',
        ],
      };
      
    case 'Article':
      return {
        ...baseJsonLd,
        '@type': 'Article',
        headline: data.title,
        description: data.description,
        image: data.imageUrl || '/og-image-guide.jpg',
        author: {
          '@type': 'Organization',
          name: 'NAVI AI',
        },
        publisher: {
          '@type': 'Organization',
          name: 'NAVI',
          logo: {
            '@type': 'ImageObject',
            url: `${domain}/logo.png`,
          },
        },
        datePublished: data.publishedDate || new Date().toISOString(),
        dateModified: data.modifiedDate || new Date().toISOString(),
        mainEntityOfPage: data.url,
        inLanguage: language,
      };
      
    case 'TouristAttraction':
      return {
        ...baseJsonLd,
        '@type': 'TouristAttraction',
        name: data.name,
        description: data.description,
        image: data.imageUrl,
        url: data.url,
        address: data.address,
        geo: data.coordinates && {
          '@type': 'GeoCoordinates',
          latitude: data.coordinates.lat,
          longitude: data.coordinates.lng,
        },
        touristType: 'international visitors',
        availableLanguage: ['ko', 'en', 'ja', 'zh', 'es'],
        hasMap: data.mapUrl,
      };
      
    default:
      return baseJsonLd;
  }
}

/**
 * 사이트맵 URL 생성
 */
export function generateSitemapUrls(guides: Array<{ name: string; slug: string }>) {
  const urls: Array<{ url: string; lastModified: Date; changeFrequency: 'daily' | 'weekly' | 'monthly' | 'yearly' | 'never' | 'always' | 'hourly'; priority: number }> = [];  
  // 기본 페이지들
  Object.entries(BASE_DOMAINS).forEach(([lang, domain]) => {
    // 홈페이지
    urls.push({
      url: domain,
      lastModified: new Date(),
      changeFrequency: 'daily',
      priority: 1.0,
    });
    
    // 가이드 목록 페이지
    urls.push({
      url: `${domain}/guides`,
      lastModified: new Date(),
      changeFrequency: 'daily',
      priority: 0.8,
    });
    
    // 개별 가이드 페이지들
    guides.forEach(guide => {
      urls.push({
        url: `${domain}/guides/${guide.slug}`,
        lastModified: new Date(),
        changeFrequency: 'weekly',
        priority: 0.7,
      });
    });
  });
  
  return urls;
} 